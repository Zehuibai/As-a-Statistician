PrimEnd <- data.frame('Primary Endpoint'=c("Primary Analysis",
"Sensitivity Analysis with log-transformation",
"Sensitivity Analysis with t-test",
"Primary Analysis after imputation"),
mean=c(-0.2945, -0.08334, -0.2926, -0.2395),
LL=c(-0.9612, -0.2861, -0.9344, -0.7521),
UL=c(0.3722, 0.1194, 0.3491, 0.2730),
pvalue=c("P = 0.3128", "P = 0.3474", "P = 0.3039","P = 0.3594"))
library(ggplot2)
ggplot(PrimEnd, aes(x=Primary.Endpoint, y=mean)) +
geom_line() +
geom_point()+
geom_text(aes(label=pvalue),hjust=-0.3, vjust=0) +
geom_hline(aes(yintercept=0, color="black", linetype="dot")) +
geom_errorbar(aes(ymin=LL, ymax=UL), width = 0.5, size = 0.5)+
theme_bw() +
theme(legend.position = "none") +
labs(x = "Primary Endpoint",
y = "Difference between the IOLs",
title = "Superiority analysis in mean absolute rotation between Visit H0 (sitting) and H1")
PrimEnd <- data.frame('Primary Endpoint'=c("Primary Analysis",
"Sensitivity Analysis with log-transformation",
"Sensitivity Analysis with t-test",
"Primary Analysis after imputation"),
mean=c(-0.2945, -0.08334, -0.2926, -0.2395),
LL=c(-0.9612, -0.2861, -0.9344, -0.7521),
UL=c(0.3722, 0.1194, 0.3491, 0.2730),
pvalue=c("P = 0.3128", "P = 0.3474", "P = 0.3039","P = 0.3594"))
library(ggplot2)
ggplot(PrimEnd, aes(x=Primary.Endpoint, y=mean)) +
geom_line() +
geom_point()+
geom_text(aes(label=pvalue),hjust=-0.2, vjust=0) +
geom_hline(aes(yintercept=0, color="black", linetype="dot")) +
geom_errorbar(aes(ymin=LL, ymax=UL), width = 0.5, size = 0.5)+
theme_bw() +
theme(legend.position = "none") +
labs(x = "Primary Endpoint",
y = "Difference between the IOLs",
title = "Superiority analysis in mean absolute rotation between Visit H0 (sitting) and H1")
PrimEnd <- data.frame('Primary Endpoint'=c("Primary Analysis",
"Sensitivity Analysis with log-transformation",
"Sensitivity Analysis with t-test",
"Primary Analysis after imputation"),
mean=c(-0.2945, -0.08334, -0.2926, -0.2395),
LL=c(-0.9612, -0.2861, -0.9344, -0.7521),
UL=c(0.3722, 0.1194, 0.3491, 0.2730),
pvalue=c("P = 0.313", "P = 0.347", "P = 0.304","P = 0.359"))
library(ggplot2)
ggplot(PrimEnd, aes(x=Primary.Endpoint, y=mean)) +
geom_line() +
geom_point()+
geom_text(aes(label=pvalue),hjust=-0.2, vjust=0) +
geom_hline(aes(yintercept=0, color="black", linetype="dot")) +
geom_errorbar(aes(ymin=LL, ymax=UL), width = 0.5, size = 0.5)+
theme_bw() +
theme(legend.position = "none") +
labs(x = "Primary Endpoint",
y = "Difference between the IOLs",
title = "Superiority analysis in mean absolute rotation between Visit H0 (sitting) and H1")
PrimEnd <- data.frame('Primary Endpoint'=c("Primary Analysis",
"Sensitivity Analysis with log-transformation",
"Sensitivity Analysis with t-test",
"Primary Analysis after imputation"),
mean=c(-0.2945, -0.08334, -0.2926, -0.2395),
LL=c(-0.9612, -0.2861, -0.9344, -0.7521),
UL=c(0.3722, 0.1194, 0.3491, 0.2730),
pvalue=c("P = 0.313", "P = 0.347", "P = 0.304","P = 0.359"))
library(ggplot2)
ggplot(PrimEnd, aes(x=Primary.Endpoint, y=mean)) +
geom_line() +
geom_point()+
geom_text(aes(label=pvalue),hjust=-0.2, vjust=0) +
geom_hline(aes(yintercept=0, color="black", linetype="dot")) +
geom_errorbar(aes(ymin=LL, ymax=UL), width = 0.5, size = 0.5)+
theme_bw() +
theme(legend.position = "none") +
labs(x = "",
y = "Difference between the IOLs",
title = "Superiority analysis in mean absolute rotation between Visit H0 (sitting) and H1")
level <- PrimEnd$Primary.Endpoint
level
PrimEnd$Primary.Endpoint <- factor(PrimEnd$Primary.Endpoint, levels=level)
library(ggplot2)
ggplot(PrimEnd, aes(x=Primary.Endpoint, y=mean)) +
geom_line() +
geom_point()+
geom_text(aes(label=pvalue),hjust=-0.2, vjust=0) +
geom_hline(aes(yintercept=0, color="black", linetype="dot")) +
geom_errorbar(aes(ymin=LL, ymax=UL), width = 0.5, size = 0.5)+
theme_bw() +
theme(legend.position = "none") +
labs(x = "",
y = "Difference between the IOLs",
title = "Superiority analysis in mean absolute rotation between Visit H0 (sitting) and H1")
SecdEnd <- data.frame('Primary Endpoint'=c("Non-Inferiority Analysis",
"Sensitivity Analysis with Farrington and Manning test",
"Non-Inferiority Analysis after imputation"),
mean=c(-2.24%, -2.21%, -1.57%),
LL=c(-9.91%, -10.28%, -8.12%),
UL=c(5.43%, 5.85%, 4.98%),
pvalue=c("P = 0.472", "P = 0.469", "P = 0.390"))
install.packages("scales")
install.packages("scales")
library('scales')
percent(c(-2.24, -2.21, -1.57))
mean=percent(c(-2.24, -2.21, -1.57)/100)
mean
mean
str(mean)
SecdEnd <- data.frame('Secondary Endpoint'=c("Non-Inferiority Analysis",
"Sensitivity Analysis with Farrington and Manning test",
"Non-Inferiority Analysis after imputation"),
mean=c(-2.24, -2.21, -1.57)/100,
LL=c(-9.91, -10.28, -8.12)/100,
UL=c(5.43, 5.85, 4.98)/100,
pvalue=c("P = 0.472", "P = 0.469", "P = 0.390"))
level <- SecdEnd$Secondary.Endpoint
SecdEnd$Secondary.Endpoint <- factor(SecdEnd$Secondary.Endpoint, levels=level)
SecdEnd
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data$date <- as.Date(data$date)
data %>%
ggplot( aes(x=date, y=value)) +
geom_line(color="#69b3a2")
library(tidyverse)
data %>%
ggplot( aes(x=date, y=value)) +
geom_line(color="#69b3a2")
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data$date <- as.Date(data$date)
data %>%
ggplot( aes(x=date, y=value)) +
geom_line(color="#69b3a2")+
annotate(geom="text", x=as.Date("2017-01-01"), y=19000,
label="Bitcoin price reached 20k $\nat the end of 2017")+
annotate(geom="point", x=as.Date("2017-12-17"), y=20089, size=10, shape=21, fill="transparent")
data %>%
ggplot( aes(x=date, y=value)) +
geom_line(color="#69b3a2")+
annotate(geom="text", x=as.Date("2017-01-01"), y=19000,
label="Bitcoin price reached 20k $\nat the end of 2017")+
annotate(geom="point", x=as.Date("2017-12-17"), y=20089, size=10, shape=21, fill="transparent")+
geom_hline(yintercept=5000, color="orange", size=.5)+
scale_color_manual(values=c("grey", "red"))
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data$date <- as.Date(data$date)
data %>%
mutate( annotation = ifelse(gdpPercap > 5000 & lifeExp < 60, "yes", "no")) %>%
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent)) +
geom_point(alpha=0.7) +
theme(legend.position="none") +
geom_text_repel(data=tmp %>% filter(annotation=="yes"), aes(label=country), size=4 )
library("ggrepel")
data %>%
mutate( annotation = ifelse(gdpPercap > 5000 & lifeExp < 60, "yes", "no")) %>%
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent)) +
geom_point(alpha=0.7) +
theme(legend.position="none") +
geom_text_repel(data=tmp %>% filter(annotation=="yes"), aes(label=country), size=4 )
tmp <- data %>%
mutate( annotation = ifelse(gdpPercap > 5000 & lifeExp < 60, "yes", "no")) %>%
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent)) +
geom_point(alpha=0.7) +
theme(legend.position="none") +
geom_text_repel(data=tmp %>% filter(annotation=="yes"), aes(label=country), size=4 )
install.packages("gapminder")
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% select(-year)
data %>%
mutate( annotation = ifelse(gdpPercap > 5000 & lifeExp < 60, "yes", "no")) %>%
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent)) +
geom_point(alpha=0.7) +
theme(legend.position="none") +
geom_text_repel(data=tmp %>% filter(annotation=="yes"), aes(label=country), size=4 )
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% select(-year)
# prepare data
tmp <- data %>%
mutate( annotation = ifelse(gdpPercap > 5000 & lifeExp < 60, "yes", "no"))
# plot
tmp %>%
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent)) +
geom_point(alpha=0.7) +
theme(legend.position="none") +
geom_text_repel(data=tmp %>% filter(annotation=="yes"), aes(label=country), size=4 )
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% select(-year)
# Basic ggplot
p <- data %>%
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent)) +
geom_point(alpha=0.7)
library(plotly)
ggplotly(p)
p <- data %>%
mutate(myText=paste("This country is: " , country )) %>%
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=myText)) +
geom_point(alpha=0.7)
ggplotly(p, tooltip="text")
# Load dataset from github
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv", header=TRUE)
# Make the histogram
data %>%
ggplot( aes(x=price)) +
geom_histogram(color="white", fill="steelblue4") +
ggtitle("Night price distribution of Airbnb appartements") +
xlab("Night price") +
ylab("Number of apartments")
data %>%
ggplot( aes(x=price)) +
geom_histogram(color="white", fill="steelblue4") +
ggtitle("Night price distribution of Airbnb appartements") +
xlab("Night price") +
ylab("Number of apartments") +
scale_x_log10()
tg <- ToothGrowth
head(tg)
ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Dose (mg)") +
ylab("Tooth length") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("OJ", "VC"),
labels=c("Orange juice", "Ascorbic acid"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("The Effect of Vitamin C on\nTooth Growth in Guinea Pigs") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
tgc <- summarySE(tg, measurevar="len", groupvars=c("supp","dose"))
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
tgc <- summarySE(tg, measurevar="len", groupvars=c("supp","dose"))
ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Dose (mg)") +
ylab("Tooth length") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("OJ", "VC"),
labels=c("Orange juice", "Ascorbic acid"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("The Effect of Vitamin C on\nTooth Growth in Guinea Pigs") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.1)
ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Dose (mg)") +
ylab("Tooth length") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("OJ", "VC"),
labels=c("Orange juice", "Ascorbic acid"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("The Effect of Vitamin C on\nTooth Growth in Guinea Pigs") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
tgc2 <- tgc
tgc2$dose <- factor(tgc2$dose)
ggplot(tgc2, aes(x=dose, y=len, fill=supp)) +
geom_bar(position=position_dodge(), stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=len-se, ymax=len+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
xlab("Dose (mg)") +
ylab("Tooth length") +
scale_fill_hue(name="Supplement type", # Legend label, use darker colors
breaks=c("OJ", "VC"),
labels=c("Orange juice", "Ascorbic acid")) +
ggtitle("The Effect of Vitamin C on\nTooth Growth in Guinea Pigs") +
scale_y_continuous(breaks=0:20*4) +
theme_bw()
library(sas7bdat)
install.packages("sas7bdat")
path <- "C:/Users/zbai/Projects/00_Project/00 PMS_VENUS/VENUS_CIR/01_Datasets"
library(sas7bdat)
ACD <- read.sas7bdat(file = file.path(path, "ACD.sas7bdat"))
